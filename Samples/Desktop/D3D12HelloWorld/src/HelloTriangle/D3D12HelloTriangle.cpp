//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************

#include "stdafx.h"
#include "D3D12HelloTriangle.h"

D3D12HelloTriangle::D3D12HelloTriangle(UINT width, UINT height, std::wstring name) :
    DXSample(width, height, name),
    m_frameIndex(0),
    m_viewport(0.0f, 0.0f, static_cast<float>(width), static_cast<float>(height)),
    m_scissorRect(0, 0, static_cast<LONG>(width), static_cast<LONG>(height)),
    m_rtvDescriptorSize(0)
{
}

void D3D12HelloTriangle::OnInit()
{
    LoadPipeline();
    LoadAssets();
}

// Load the rendering pipeline dependencies.
void D3D12HelloTriangle::LoadPipeline()
{
    UINT dxgiFactoryFlags = 0;

#if defined(_DEBUG)
    // Enable the debug layer (requires the Graphics Tools "optional feature").
    // NOTE: Enabling the debug layer after device creation will invalidate the active device.
    {
        ComPtr<ID3D12Debug> debugController;
        if (SUCCEEDED(D3D12GetDebugInterface(IID_PPV_ARGS(&debugController))))
        {
            debugController->EnableDebugLayer();

            // Enable additional debug layers.
            dxgiFactoryFlags |= DXGI_CREATE_FACTORY_DEBUG;
        }
    }
#endif

    ComPtr<IDXGIFactory4> factory;
    ThrowIfFailed(CreateDXGIFactory2(dxgiFactoryFlags, IID_PPV_ARGS(&factory)));

    if (m_useWarpDevice)
    {
        ComPtr<IDXGIAdapter> warpAdapter;
        ThrowIfFailed(factory->EnumWarpAdapter(IID_PPV_ARGS(&warpAdapter)));

        ThrowIfFailed(D3D12CreateDevice(
            warpAdapter.Get(),
            D3D_FEATURE_LEVEL_11_0,
            IID_PPV_ARGS(&m_device)
            ));
    }
    else
    {
        ComPtr<IDXGIAdapter1> hardwareAdapter;
        GetHardwareAdapter(factory.Get(), &hardwareAdapter);

        ThrowIfFailed(D3D12CreateDevice(
            hardwareAdapter.Get(),
            D3D_FEATURE_LEVEL_11_0,
            IID_PPV_ARGS(&m_device)
            ));
    }

    // Describe and create the command queue.
    D3D12_COMMAND_QUEUE_DESC queueDesc = {};
    queueDesc.Flags = D3D12_COMMAND_QUEUE_FLAG_NONE;
    queueDesc.Type = D3D12_COMMAND_LIST_TYPE_DIRECT;

    ThrowIfFailed(m_device->CreateCommandQueue(&queueDesc, IID_PPV_ARGS(&m_commandQueue)));

    // Describe and create the swap chain.
    DXGI_SWAP_CHAIN_DESC1 swapChainDesc = {};
    swapChainDesc.BufferCount = FrameCount;
    swapChainDesc.Width = m_width;
    swapChainDesc.Height = m_height;
    swapChainDesc.Format = DXGI_FORMAT_R8G8B8A8_UNORM;
    swapChainDesc.BufferUsage = DXGI_USAGE_RENDER_TARGET_OUTPUT;
    swapChainDesc.SwapEffect = DXGI_SWAP_EFFECT_FLIP_DISCARD;
    swapChainDesc.SampleDesc.Count = 1;

    ComPtr<IDXGISwapChain1> swapChain;
    ThrowIfFailed(factory->CreateSwapChainForHwnd(
        m_commandQueue.Get(),        // Swap chain needs the queue so that it can force a flush on it.
        Win32Application::GetHwnd(),
        &swapChainDesc,
        nullptr,
        nullptr,
        &swapChain
        ));

    // This sample does not support fullscreen transitions.
    ThrowIfFailed(factory->MakeWindowAssociation(Win32Application::GetHwnd(), DXGI_MWA_NO_ALT_ENTER));

    ThrowIfFailed(swapChain.As(&m_swapChain));
    m_frameIndex = m_swapChain->GetCurrentBackBufferIndex();

    // Create descriptor heaps.
    {
        // Describe and create a render target view (RTV) descriptor heap.
        D3D12_DESCRIPTOR_HEAP_DESC rtvHeapDesc = {};
        rtvHeapDesc.NumDescriptors = FrameCount;
        rtvHeapDesc.Type = D3D12_DESCRIPTOR_HEAP_TYPE_RTV;
        rtvHeapDesc.Flags = D3D12_DESCRIPTOR_HEAP_FLAG_NONE;
        ThrowIfFailed(m_device->CreateDescriptorHeap(&rtvHeapDesc, IID_PPV_ARGS(&m_rtvHeap)));

        m_rtvDescriptorSize = m_device->GetDescriptorHandleIncrementSize(D3D12_DESCRIPTOR_HEAP_TYPE_RTV);
    }

    // Create frame resources.
    {
        CD3DX12_CPU_DESCRIPTOR_HANDLE rtvHandle(m_rtvHeap->GetCPUDescriptorHandleForHeapStart());

        // Create a RTV for each frame.
        for (UINT n = 0; n < FrameCount; n++)
        {
            ThrowIfFailed(m_swapChain->GetBuffer(n, IID_PPV_ARGS(&m_renderTargets[n])));
            m_device->CreateRenderTargetView(m_renderTargets[n].Get(), nullptr, rtvHandle);
            rtvHandle.Offset(1, m_rtvDescriptorSize);
        }
    }

    ThrowIfFailed(m_device->CreateCommandAllocator(D3D12_COMMAND_LIST_TYPE_DIRECT, IID_PPV_ARGS(&m_commandAllocator)));
}

// Load the sample assets.
void D3D12HelloTriangle::LoadAssets()
{
    // Create an empty root signature.
    {
        CD3DX12_ROOT_SIGNATURE_DESC rootSignatureDesc;
        rootSignatureDesc.Init(0, nullptr, 0, nullptr, D3D12_ROOT_SIGNATURE_FLAG_ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT);

        ComPtr<ID3DBlob> signature;
        ComPtr<ID3DBlob> error;
        ThrowIfFailed(D3D12SerializeRootSignature(&rootSignatureDesc, D3D_ROOT_SIGNATURE_VERSION_1, &signature, &error));
        ThrowIfFailed(m_device->CreateRootSignature(0, signature->GetBufferPointer(), signature->GetBufferSize(), IID_PPV_ARGS(&m_rootSignature)));
    }

    // Create the pipeline state, which includes compiling and loading shaders.
    {
        ComPtr<ID3DBlob> vertexShader;
        ComPtr<ID3DBlob> pixelShader;

#if defined(_DEBUG)
        // Enable better shader debugging with the graphics debugging tools.
        UINT compileFlags = D3DCOMPILE_DEBUG | D3DCOMPILE_SKIP_OPTIMIZATION;
#else
        UINT compileFlags = 0;
#endif

        ThrowIfFailed(D3DCompileFromFile(GetAssetFullPath(L"shaders.hlsl").c_str(), nullptr, nullptr, "VSMain", "vs_5_0", compileFlags, 0, &vertexShader, nullptr));
        ThrowIfFailed(D3DCompileFromFile(GetAssetFullPath(L"shaders.hlsl").c_str(), nullptr, nullptr, "PSMain", "ps_5_0", compileFlags, 0, &pixelShader, nullptr));

        // Define the vertex input layout.
        D3D12_INPUT_ELEMENT_DESC inputElementDescs[] =
        {
            { "POSITION", 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 0, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0 },
            { "COLOR", 0, DXGI_FORMAT_R32G32B32A32_FLOAT, 0, 12, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0 }
        };

        // Describe and create the graphics pipeline state object (PSO).
        D3D12_GRAPHICS_PIPELINE_STATE_DESC psoDesc = {};
        psoDesc.InputLayout = { inputElementDescs, _countof(inputElementDescs) };
        psoDesc.pRootSignature = m_rootSignature.Get();
        psoDesc.VS = CD3DX12_SHADER_BYTECODE(vertexShader.Get());
        psoDesc.PS = CD3DX12_SHADER_BYTECODE(pixelShader.Get());
        psoDesc.RasterizerState = CD3DX12_RASTERIZER_DESC(D3D12_DEFAULT);
        psoDesc.BlendState = CD3DX12_BLEND_DESC(D3D12_DEFAULT);
        psoDesc.DepthStencilState.DepthEnable = FALSE;
        psoDesc.DepthStencilState.StencilEnable = FALSE;
        psoDesc.SampleMask = UINT_MAX;
        psoDesc.PrimitiveTopologyType = D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE;
        psoDesc.NumRenderTargets = 1;
        psoDesc.RTVFormats[0] = DXGI_FORMAT_R8G8B8A8_UNORM;
        psoDesc.SampleDesc.Count = 1;
        ThrowIfFailed(m_device->CreateGraphicsPipelineState(&psoDesc, IID_PPV_ARGS(&m_pipelineState)));
    }

    // Create the command list.
    ThrowIfFailed(m_device->CreateCommandList(0, D3D12_COMMAND_LIST_TYPE_DIRECT, m_commandAllocator.Get(), m_pipelineState.Get(), IID_PPV_ARGS(&m_commandList)));

    // Command lists are created in the recording state, but there is nothing
    // to record yet. The main loop expects it to be closed, so close it now.
    ThrowIfFailed(m_commandList->Close());

    // Create the vertex buffer.
    {
        // Define the geometry for a triangle.
        Vertex triangleVertices[] =
        {
            { { (1279.500000 - 640) / 640, -(719.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (-0.500000 - 640) / 640, -(719.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (-0.500000 - 640) / 640, -(-0.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (-0.500000 - 640) / 640, -(-0.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1279.500000 - 640) / 640, -(-0.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1279.500000 - 640) / 640, -(719.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (-9.558204 - 640) / 640, -(936.314941 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (62.685081 - 640) / 640, -(-289.558197 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1288.558228 - 640) / 640, -(-217.314911 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1288.558228 - 640) / 640, -(-217.314911 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1216.314941 - 640) / 640, -(1008.558228 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (-9.558204 - 640) / 640, -(936.314941 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (619.500000 - 640) / 640, -(549.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (659.500000 - 640) / 640, -(549.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (659.500000 - 640) / 640, -(589.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (659.500000 - 640) / 640, -(589.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (619.500000 - 640) / 640, -(589.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (619.500000 - 640) / 640, -(549.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.418884 - 640) / 640, -(588.798157 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.424316 - 640) / 640, -(588.693604 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.156799 - 640) / 640, -(586.508240 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.303711 - 640) / 640, -(588.848694 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.333435 - 640) / 640, -(588.606750 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.362854 - 640) / 640, -(586.544556 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.568542 - 640) / 640, -(588.962708 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.570984 - 640) / 640, -(589.032471 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.860474 - 640) / 640, -(586.004883 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.473511 - 640) / 640, -(588.766968 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.474121 - 640) / 640, -(588.732117 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.052368 - 640) / 640, -(586.500916 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (646.618164 - 640) / 640, -(592.931641 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (645.625610 - 640) / 640, -(593.053467 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (645.756287 - 640) / 640, -(590.014893 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (646.655884 - 640) / 640, -(592.618286 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (645.681519 - 640) / 640, -(592.843262 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (645.662598 - 640) / 640, -(590.538452 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (644.517395 - 640) / 640, -(592.991150 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.517517 - 640) / 640, -(593.008545 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.965088 - 640) / 640, -(590.000305 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (640.410950 - 640) / 640, -(593.039795 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (639.414734 - 640) / 640, -(592.952637 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (640.174316 - 640) / 640, -(590.007629 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (636.534607 - 640) / 640, -(589.981934 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.535217 - 640) / 640, -(590.016846 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.930176 - 640) / 640, -(587.001221 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.473511 - 640) / 640, -(589.766968 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.474121 - 640) / 640, -(589.732117 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.052368 - 640) / 640, -(587.500916 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.538574 - 640) / 640, -(589.722778 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.539917 - 640) / 640, -(589.775146 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.921509 - 640) / 640, -(587.502075 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (640.410950 - 640) / 640, -(590.039795 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (639.414734 - 640) / 640, -(589.952637 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (640.174316 - 640) / 640, -(587.007629 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (636.517395 - 640) / 640, -(589.991150 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.517517 - 640) / 640, -(590.008545 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.965088 - 640) / 640, -(587.000305 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.677063 - 640) / 640, -(589.595032 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (640.711182 - 640) / 640, -(589.853882 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (640.611755 - 640) / 640, -(587.551086 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (644.551086 - 640) / 640, -(581.713318 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.553528 - 640) / 640, -(581.783081 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.895386 - 640) / 640, -(579.503662 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (639.666565 - 640) / 640, -(581.606750 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.696289 - 640) / 640, -(581.848694 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.637146 - 640) / 640, -(579.544556 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.262207 - 640) / 640, -(582.086853 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.287842 - 640) / 640, -(581.861877 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.449890 - 640) / 640, -(579.051270 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (639.666077 - 640) / 640, -(581.898010 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.681274 - 640) / 640, -(582.071655 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.652710 - 640) / 640, -(579.030396 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (640.333130 - 640) / 640, -(581.837585 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (639.354980 - 640) / 640, -(581.629639 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (640.311890 - 640) / 640, -(579.532776 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.622620 - 640) / 640, -(587.651794 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.637817 - 640) / 640, -(587.825439 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.739502 - 640) / 640, -(585.522766 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (647.666565 - 640) / 640, -(587.606750 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (646.696289 - 640) / 640, -(587.848694 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (646.637146 - 640) / 640, -(585.544556 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (639.618164 - 640) / 640, -(587.931641 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.625610 - 640) / 640, -(588.053467 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.756287 - 640) / 640, -(585.014893 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (636.634277 - 640) / 640, -(580.920654 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.644043 - 640) / 640, -(581.059875 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.721680 - 640) / 640, -(578.019470 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (644.622620 - 640) / 640, -(580.651794 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.637817 - 640) / 640, -(580.825439 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.739502 - 640) / 640, -(578.522766 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.551086 - 640) / 640, -(580.713318 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.553528 - 640) / 640, -(580.783081 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.895386 - 640) / 640, -(578.503662 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.446960 - 640) / 640, -(581.024780 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (640.448364 - 640) / 640, -(580.972473 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.104675 - 640) / 640, -(578.002747 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (636.611145 - 640) / 640, -(580.662537 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.623474 - 640) / 640, -(580.818970 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.765320 - 640) / 640, -(578.518494 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.355957 - 640) / 640, -(581.059875 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.365723 - 640) / 640, -(580.920654 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.278320 - 640) / 640, -(578.019470 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.486816 - 640) / 640, -(580.758606 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (636.487000 - 640) / 640, -(580.741150 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.026184 - 640) / 640, -(578.500244 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.362183 - 640) / 640, -(583.825439 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (633.377380 - 640) / 640, -(583.651794 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.260498 - 640) / 640, -(581.522766 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.374390 - 640) / 640, -(584.053467 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.381836 - 640) / 640, -(583.931641 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.243713 - 640) / 640, -(581.014893 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.482483 - 640) / 640, -(584.008545 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (636.482605 - 640) / 640, -(583.991150 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.034912 - 640) / 640, -(581.000305 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.410950 - 640) / 640, -(584.039795 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (640.414734 - 640) / 640, -(583.952637 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.174316 - 640) / 640, -(581.007629 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.486816 - 640) / 640, -(583.758606 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.487000 - 640) / 640, -(583.741150 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.026184 - 640) / 640, -(581.500244 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.464783 - 640) / 640, -(584.016846 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.465393 - 640) / 640, -(583.981934 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.069824 - 640) / 640, -(581.001221 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (636.299988 - 640) / 640, -(584.077026 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.318359 - 640) / 640, -(583.886230 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (636.381592 - 640) / 640, -(581.036743 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.551636 - 640) / 640, -(583.972473 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.553040 - 640) / 640, -(584.024780 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.895325 - 640) / 640, -(581.002747 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.347717 - 640) / 640, -(578.831604 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.366089 - 640) / 640, -(578.640808 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.286194 - 640) / 640, -(576.527588 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (644.587646 - 640) / 640, -(578.683472 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.595154 - 640) / 640, -(578.805359 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.817200 - 640) / 640, -(576.511169 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.355957 - 640) / 640, -(579.059875 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (636.365723 - 640) / 640, -(578.920654 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.278320 - 640) / 640, -(576.019470 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.525879 - 640) / 640, -(578.732117 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.526489 - 640) / 640, -(578.766968 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.947632 - 640) / 640, -(576.500916 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.347717 - 640) / 640, -(578.831604 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.366089 - 640) / 640, -(578.640808 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.286194 - 640) / 640, -(576.527588 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.460083 - 640) / 640, -(578.775146 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.461426 - 640) / 640, -(578.722778 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.078491 - 640) / 640, -(576.502075 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.418884 - 640) / 640, -(578.798157 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (636.424316 - 640) / 640, -(578.693604 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.156799 - 640) / 640, -(576.508240 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.418884 - 640) / 640, -(578.798157 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (640.424316 - 640) / 640, -(578.693604 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.156799 - 640) / 640, -(576.508240 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.392761 - 640) / 640, -(580.046814 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.398193 - 640) / 640, -(579.942261 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.209045 - 640) / 640, -(577.010986 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.303711 - 640) / 640, -(579.848694 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.333435 - 640) / 640, -(579.606750 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.362854 - 640) / 640, -(577.544556 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.551086 - 640) / 640, -(579.713318 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.553528 - 640) / 640, -(579.783081 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.895386 - 640) / 640, -(577.503662 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (640.303711 - 640) / 640, -(579.848694 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (639.333435 - 640) / 640, -(579.606750 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (640.362854 - 640) / 640, -(577.544556 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.446472 - 640) / 640, -(579.783081 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.448914 - 640) / 640, -(579.713318 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.104614 - 640) / 640, -(577.503662 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.362183 - 640) / 640, -(579.825439 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.377380 - 640) / 640, -(579.651794 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.260498 - 640) / 640, -(577.522766 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.634277 - 640) / 640, -(579.920654 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.644043 - 640) / 640, -(580.059875 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.721680 - 640) / 640, -(577.019470 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.410950 - 640) / 640, -(580.039795 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (640.414734 - 640) / 640, -(579.952637 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.174316 - 640) / 640, -(577.007629 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (636.696960 - 640) / 640, -(579.874207 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.718811 - 640) / 640, -(580.082092 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.584167 - 640) / 640, -(577.043701 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.464783 - 640) / 640, -(580.016846 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.465393 - 640) / 640, -(579.981934 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.069824 - 640) / 640, -(577.001221 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.446960 - 640) / 640, -(580.024780 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (636.448364 - 640) / 640, -(579.972473 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.104675 - 640) / 640, -(577.002747 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.741760 - 640) / 640, -(578.836487 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.775879 - 640) / 640, -(579.095337 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.482361 - 640) / 640, -(576.068176 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.333130 - 640) / 640, -(579.837585 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.354980 - 640) / 640, -(579.629639 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.311890 - 640) / 640, -(577.532776 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.303711 - 640) / 640, -(578.848694 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.333435 - 640) / 640, -(578.606750 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.362854 - 640) / 640, -(576.544556 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.634277 - 640) / 640, -(579.920654 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.644043 - 640) / 640, -(580.059875 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.721680 - 640) / 640, -(577.019470 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.404846 - 640) / 640, -(579.805359 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (640.412354 - 640) / 640, -(579.683472 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.182800 - 640) / 640, -(577.511169 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.404846 - 640) / 640, -(577.805359 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.412354 - 640) / 640, -(577.683472 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.182800 - 640) / 640, -(575.511169 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.460083 - 640) / 640, -(578.775146 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.461426 - 640) / 640, -(578.722778 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.078491 - 640) / 640, -(576.502075 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.727051 - 640) / 640, -(577.849365 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.756775 - 640) / 640, -(578.091248 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.516174 - 640) / 640, -(575.059387 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.281189 - 640) / 640, -(578.082092 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (640.303040 - 640) / 640, -(577.874207 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.415833 - 640) / 640, -(575.043701 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (636.585266 - 640) / 640, -(577.952637 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.589050 - 640) / 640, -(578.039795 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.825684 - 640) / 640, -(575.007629 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.473511 - 640) / 640, -(578.766968 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.474121 - 640) / 640, -(578.732117 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.052368 - 640) / 640, -(576.500916 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.538574 - 640) / 640, -(578.722778 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.539917 - 640) / 640, -(578.775146 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.921509 - 640) / 640, -(576.502075 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.727051 - 640) / 640, -(577.849365 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.756775 - 640) / 640, -(578.091248 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.516174 - 640) / 640, -(575.059387 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (636.563477 - 640) / 640, -(577.703552 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.567261 - 640) / 640, -(577.790710 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.869263 - 640) / 640, -(575.505737 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.318481 - 640) / 640, -(577.843262 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.344116 - 640) / 640, -(577.618286 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.337402 - 640) / 640, -(575.538452 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.634277 - 640) / 640, -(577.920654 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.644043 - 640) / 640, -(578.059875 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.721680 - 640) / 640, -(575.019470 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.418884 - 640) / 640, -(577.798157 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (640.424316 - 640) / 640, -(577.693604 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.156799 - 640) / 640, -(575.508240 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (636.712158 - 640) / 640, -(577.861877 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.737793 - 640) / 640, -(578.086853 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.550110 - 640) / 640, -(575.051270 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (644.712158 - 640) / 640, -(577.861877 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.737793 - 640) / 640, -(578.086853 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.550110 - 640) / 640, -(575.051270 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.587646 - 640) / 640, -(577.683472 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.595154 - 640) / 640, -(577.805359 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.817200 - 640) / 640, -(575.511169 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.585266 - 640) / 640, -(577.952637 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.589050 - 640) / 640, -(578.039795 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.825684 - 640) / 640, -(575.007629 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.390747 - 640) / 640, -(576.812317 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.400513 - 640) / 640, -(576.673096 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.208740 - 640) / 640, -(574.514587 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (644.618164 - 640) / 640, -(576.931641 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.625610 - 640) / 640, -(577.053467 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.756287 - 640) / 640, -(574.014893 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.390747 - 640) / 640, -(576.812317 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (636.400513 - 640) / 640, -(576.673096 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.208740 - 640) / 640, -(574.514587 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.376526 - 640) / 640, -(576.818970 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (640.388855 - 640) / 640, -(576.662537 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.234680 - 640) / 640, -(574.518494 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (636.634277 - 640) / 640, -(576.920654 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.644043 - 640) / 640, -(577.059875 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.721680 - 640) / 640, -(574.019470 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (644.575684 - 640) / 640, -(576.693604 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.581116 - 640) / 640, -(576.798157 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.843201 - 640) / 640, -(574.508240 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.634277 - 640) / 640, -(576.920654 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.644043 - 640) / 640, -(577.059875 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.721680 - 640) / 640, -(574.019470 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.741760 - 640) / 640, -(576.836487 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.775879 - 640) / 640, -(577.095337 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.482361 - 640) / 640, -(574.068176 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (636.376526 - 640) / 640, -(575.818970 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.388855 - 640) / 640, -(575.662537 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (636.234680 - 640) / 640, -(573.518494 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (644.622620 - 640) / 640, -(575.651794 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.637817 - 640) / 640, -(575.825439 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.739502 - 640) / 640, -(573.522766 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.262207 - 640) / 640, -(576.086853 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.287842 - 640) / 640, -(575.861877 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.449890 - 640) / 640, -(573.051270 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.262207 - 640) / 640, -(576.086853 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.287842 - 640) / 640, -(575.861877 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.449890 - 640) / 640, -(573.051270 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (636.337402 - 640) / 640, -(576.065918 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (635.349731 - 640) / 640, -(575.909485 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (636.312866 - 640) / 640, -(573.024597 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (644.482483 - 640) / 640, -(576.008545 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.482605 - 640) / 640, -(575.991150 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (644.034912 - 640) / 640, -(573.000305 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.362183 - 640) / 640, -(575.825439 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (637.377380 - 640) / 640, -(575.651794 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (638.260498 - 640) / 640, -(573.522766 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (642.585266 - 640) / 640, -(575.952637 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.589050 - 640) / 640, -(576.039795 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (641.825684 - 640) / 640, -(573.007629 - 360) / 360, 0.987654 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (645.500000 - 640) / 640, -(596.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (632.500000 - 640) / 640, -(596.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (632.500000 - 640) / 640, -(583.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (632.500000 - 640) / 640, -(583.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (645.500000 - 640) / 640, -(583.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (645.500000 - 640) / 640, -(596.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.500000 - 640) / 640, -(594.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.500000 - 640) / 640, -(594.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.500000 - 640) / 640, -(585.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.500000 - 640) / 640, -(585.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.500000 - 640) / 640, -(585.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.500000 - 640) / 640, -(594.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (645.500000 - 640) / 640, -(606.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (632.500000 - 640) / 640, -(606.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (632.500000 - 640) / 640, -(593.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (632.500000 - 640) / 640, -(593.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (645.500000 - 640) / 640, -(593.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (645.500000 - 640) / 640, -(606.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.500000 - 640) / 640, -(604.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.500000 - 640) / 640, -(604.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.500000 - 640) / 640, -(595.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.500000 - 640) / 640, -(595.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.500000 - 640) / 640, -(595.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.500000 - 640) / 640, -(604.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (645.500000 - 640) / 640, -(616.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (632.500000 - 640) / 640, -(616.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (632.500000 - 640) / 640, -(603.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (632.500000 - 640) / 640, -(603.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (645.500000 - 640) / 640, -(603.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (645.500000 - 640) / 640, -(616.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.500000 - 640) / 640, -(614.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.500000 - 640) / 640, -(614.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.500000 - 640) / 640, -(605.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.500000 - 640) / 640, -(605.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.500000 - 640) / 640, -(605.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.500000 - 640) / 640, -(614.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (645.500000 - 640) / 640, -(626.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (632.500000 - 640) / 640, -(626.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (632.500000 - 640) / 640, -(613.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (632.500000 - 640) / 640, -(613.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (645.500000 - 640) / 640, -(613.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (645.500000 - 640) / 640, -(626.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.500000 - 640) / 640, -(624.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.500000 - 640) / 640, -(624.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.500000 - 640) / 640, -(615.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.500000 - 640) / 640, -(615.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.500000 - 640) / 640, -(615.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.500000 - 640) / 640, -(624.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (645.500000 - 640) / 640, -(636.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (632.500000 - 640) / 640, -(636.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (632.500000 - 640) / 640, -(623.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (632.500000 - 640) / 640, -(623.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (645.500000 - 640) / 640, -(623.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (645.500000 - 640) / 640, -(636.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.500000 - 640) / 640, -(634.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.500000 - 640) / 640, -(634.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.500000 - 640) / 640, -(625.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.500000 - 640) / 640, -(625.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.500000 - 640) / 640, -(625.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.500000 - 640) / 640, -(634.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (645.500000 - 640) / 640, -(646.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (632.500000 - 640) / 640, -(646.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (632.500000 - 640) / 640, -(633.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (632.500000 - 640) / 640, -(633.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (645.500000 - 640) / 640, -(633.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (645.500000 - 640) / 640, -(646.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.500000 - 640) / 640, -(644.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.500000 - 640) / 640, -(644.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.500000 - 640) / 640, -(635.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (634.500000 - 640) / 640, -(635.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.500000 - 640) / 640, -(635.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (643.500000 - 640) / 640, -(644.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (914.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1122.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1145.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (913.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (913.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (913.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1145.500000 - 640) / 640, -(507.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (1145.500000 - 640) / 640, -(715.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (119.500000 - 640) / 640, -(479.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (-0.500000 - 640) / 640, -(479.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (-0.500000 - 640) / 640, -(-0.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (-0.500000 - 640) / 640, -(-0.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (119.500000 - 640) / 640, -(-0.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (119.500000 - 640) / 640, -(479.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (639.500000 - 640) / 640, -(479.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (519.500000 - 640) / 640, -(479.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (519.500000 - 640) / 640, -(-0.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (519.500000 - 640) / 640, -(-0.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (639.500000 - 640) / 640, -(-0.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (639.500000 - 640) / 640, -(479.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (143.500000 - 640) / 640, -(23.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (127.500000 - 640) / 640, -(23.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (127.500000 - 640) / 640, -(7.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (127.500000 - 640) / 640, -(7.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (143.500000 - 640) / 640, -(7.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (143.500000 - 640) / 640, -(23.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (154.500000 - 640) / 640, -(23.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (138.500000 - 640) / 640, -(23.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (138.500000 - 640) / 640, -(7.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (138.500000 - 640) / 640, -(7.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (154.500000 - 640) / 640, -(7.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (154.500000 - 640) / 640, -(23.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (165.500000 - 640) / 640, -(23.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (149.500000 - 640) / 640, -(23.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (149.500000 - 640) / 640, -(7.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (149.500000 - 640) / 640, -(7.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (165.500000 - 640) / 640, -(7.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (165.500000 - 640) / 640, -(23.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (176.500000 - 640) / 640, -(23.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (160.500000 - 640) / 640, -(23.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (160.500000 - 640) / 640, -(7.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (160.500000 - 640) / 640, -(7.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (176.500000 - 640) / 640, -(7.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (176.500000 - 640) / 640, -(23.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (187.500000 - 640) / 640, -(23.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (171.500000 - 640) / 640, -(23.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (171.500000 - 640) / 640, -(7.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (171.500000 - 640) / 640, -(7.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (187.500000 - 640) / 640, -(7.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (187.500000 - 640) / 640, -(23.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (306.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (286.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (286.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (286.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (306.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (306.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (285.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (265.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (265.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (265.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (285.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (285.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (264.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (244.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (244.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (244.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (264.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (264.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (243.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (223.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (223.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (223.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (243.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (243.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (222.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (202.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (202.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (202.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (222.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (222.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (201.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (181.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (181.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (181.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (201.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (201.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (180.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (160.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (160.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (160.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (180.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (180.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (159.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (139.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (139.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (139.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (159.500000 - 640) / 640, -(19.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (159.500000 - 640) / 640, -(43.500000 - 360) / 360, 0.900000 }, {1.0f, 1.0f, 1.0f, 1.0f } },
            { { (61.500000 - 640) / 640, -(61.500000 - 360) / 360, 0.500000 }, {1.0f, 0.0f, 0.0f, 1.0f } },
            { { (-62.500000 - 640) / 640, -(61.500000 - 360) / 360, 0.500000 }, {1.0f, 0.0f, 0.0f, 1.0f } },
            { { (-62.500000 - 640) / 640, -(-62.500000 - 360) / 360, 0.500000 }, {1.0f, 0.0f, 0.0f, 1.0f } },
            { { (-62.500000 - 640) / 640, -(-62.500000 - 360) / 360, 0.500000 }, {1.0f, 0.0f, 0.0f, 1.0f } },
            { { (61.500000 - 640) / 640, -(-62.500000 - 360) / 360, 0.500000 }, {1.0f, 0.0f, 0.0f, 1.0f } },
            { { (61.500000 - 640) / 640, -(61.500000 - 360) / 360, 0.500000 }, {1.0f, 0.0f, 0.0f, 1.0f } },
        };

        const UINT vertexBufferSize = sizeof(triangleVertices);

        // Note: using upload heaps to transfer static data like vert buffers is not 
        // recommended. Every time the GPU needs it, the upload heap will be marshalled 
        // over. Please read up on Default Heap usage. An upload heap is used here for 
        // code simplicity and because there are very few verts to actually transfer.
        ThrowIfFailed(m_device->CreateCommittedResource(
            &CD3DX12_HEAP_PROPERTIES(D3D12_HEAP_TYPE_UPLOAD),
            D3D12_HEAP_FLAG_NONE,
            &CD3DX12_RESOURCE_DESC::Buffer(vertexBufferSize),
            D3D12_RESOURCE_STATE_GENERIC_READ,
            nullptr,
            IID_PPV_ARGS(&m_vertexBuffer)));

        // Copy the triangle data to the vertex buffer.
        UINT8* pVertexDataBegin;
        CD3DX12_RANGE readRange(0, 0);        // We do not intend to read from this resource on the CPU.
        ThrowIfFailed(m_vertexBuffer->Map(0, &readRange, reinterpret_cast<void**>(&pVertexDataBegin)));
        memcpy(pVertexDataBegin, triangleVertices, sizeof(triangleVertices));
        m_vertexBuffer->Unmap(0, nullptr);

        // Initialize the vertex buffer view.
        m_vertexBufferView.BufferLocation = m_vertexBuffer->GetGPUVirtualAddress();
        m_vertexBufferView.StrideInBytes = sizeof(Vertex);
        m_vertexBufferView.SizeInBytes = vertexBufferSize;
    }

    // Create synchronization objects and wait until assets have been uploaded to the GPU.
    {
        ThrowIfFailed(m_device->CreateFence(0, D3D12_FENCE_FLAG_NONE, IID_PPV_ARGS(&m_fence)));
        m_fenceValue = 1;

        // Create an event handle to use for frame synchronization.
        m_fenceEvent = CreateEvent(nullptr, FALSE, FALSE, nullptr);
        if (m_fenceEvent == nullptr)
        {
            ThrowIfFailed(HRESULT_FROM_WIN32(GetLastError()));
        }

        // Wait for the command list to execute; we are reusing the same command 
        // list in our main loop but for now, we just want to wait for setup to 
        // complete before continuing.
        WaitForPreviousFrame();
    }
}

// Update frame-based values.
void D3D12HelloTriangle::OnUpdate()
{
}

// Render the scene.
void D3D12HelloTriangle::OnRender()
{
    // Record all the commands we need to render the scene into the command list.
    PopulateCommandList();

    // Execute the command list.
    ID3D12CommandList* ppCommandLists[] = { m_commandList.Get() };
    m_commandQueue->ExecuteCommandLists(_countof(ppCommandLists), ppCommandLists);

    // Present the frame.
    ThrowIfFailed(m_swapChain->Present(1, 0));

    WaitForPreviousFrame();
}

void D3D12HelloTriangle::OnDestroy()
{
    // Ensure that the GPU is no longer referencing resources that are about to be
    // cleaned up by the destructor.
    WaitForPreviousFrame();

    CloseHandle(m_fenceEvent);
}

void D3D12HelloTriangle::PopulateCommandList()
{
    // Command list allocators can only be reset when the associated 
    // command lists have finished execution on the GPU; apps should use 
    // fences to determine GPU execution progress.
    ThrowIfFailed(m_commandAllocator->Reset());

    // However, when ExecuteCommandList() is called on a particular command 
    // list, that command list can then be reset at any time and must be before 
    // re-recording.
    ThrowIfFailed(m_commandList->Reset(m_commandAllocator.Get(), m_pipelineState.Get()));

    // Set necessary state.
    m_commandList->SetGraphicsRootSignature(m_rootSignature.Get());
    m_commandList->RSSetViewports(1, &m_viewport);
    m_commandList->RSSetScissorRects(1, &m_scissorRect);

    // Indicate that the back buffer will be used as a render target.
    m_commandList->ResourceBarrier(1, &CD3DX12_RESOURCE_BARRIER::Transition(m_renderTargets[m_frameIndex].Get(), D3D12_RESOURCE_STATE_PRESENT, D3D12_RESOURCE_STATE_RENDER_TARGET));

    CD3DX12_CPU_DESCRIPTOR_HANDLE rtvHandle(m_rtvHeap->GetCPUDescriptorHandleForHeapStart(), m_frameIndex, m_rtvDescriptorSize);
    m_commandList->OMSetRenderTargets(1, &rtvHandle, FALSE, nullptr);

    // Record commands.
    const float clearColor[] = { 0.0f, 0.2f, 0.4f, 1.0f };
    m_commandList->ClearRenderTargetView(rtvHandle, clearColor, 0, nullptr);
    m_commandList->IASetPrimitiveTopology(D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST);
    m_commandList->IASetVertexBuffers(0, 1, &m_vertexBufferView);
    m_commandList->DrawInstanced(591, 1, 0, 0);

    // Indicate that the back buffer will now be used to present.
    m_commandList->ResourceBarrier(1, &CD3DX12_RESOURCE_BARRIER::Transition(m_renderTargets[m_frameIndex].Get(), D3D12_RESOURCE_STATE_RENDER_TARGET, D3D12_RESOURCE_STATE_PRESENT));

    ThrowIfFailed(m_commandList->Close());
}

void D3D12HelloTriangle::WaitForPreviousFrame()
{
    // WAITING FOR THE FRAME TO COMPLETE BEFORE CONTINUING IS NOT BEST PRACTICE.
    // This is code implemented as such for simplicity. The D3D12HelloFrameBuffering
    // sample illustrates how to use fences for efficient resource usage and to
    // maximize GPU utilization.

    // Signal and increment the fence value.
    const UINT64 fence = m_fenceValue;
    ThrowIfFailed(m_commandQueue->Signal(m_fence.Get(), fence));
    m_fenceValue++;

    // Wait until the previous frame is finished.
    if (m_fence->GetCompletedValue() < fence)
    {
        ThrowIfFailed(m_fence->SetEventOnCompletion(fence, m_fenceEvent));
        WaitForSingleObject(m_fenceEvent, INFINITE);
    }

    m_frameIndex = m_swapChain->GetCurrentBackBufferIndex();
}
